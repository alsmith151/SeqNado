name: Python package

on: [push, pull_request]

jobs:
  setup:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Miniforge and conda
        run: |
          wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
          bash Miniforge3-Linux-x86_64.sh -b -p /home/runner/miniforge3
          mamba init bash
          mamba install -n base -c conda-forge conda -y
        shell: bash -l {0}

      - name: Create seqnado_test environment
        run: |
          mamba env create -f testing.yml -n seqnado_test
          mamba activate seqnado_test
          pip install .

      - name: Save environment
        run: |
          tar -czf seqnado_test_env.tar.gz -C /home/runner/miniforge3/envs/seqnado_test .
      - uses: actions/upload-artifact@v3
        with:
          name: seqnado_test_env
          path: seqnado_test_env.tar.gz

  test_config_generation:
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-case: ["atac", "chip-rx", "chip", "rna-rx", "rna", "snp"]
    steps:
      - uses: actions/checkout@v3

      - name: Download environment
        uses: actions/download-artifact@v3
        with:
          name: seqnado_test
          path: .

      - name: Extract environment and activate environment
        run: |
          mkdir -p /home/runner/miniforge3/envs/seqnado_test
          tar -xzf seqnado_test_env.tar.gz -C /home/runner/miniforge3/envs/seqnado_test
          source activate /home/runner/miniforge3/envs/seqnado_test
          pytest --help
        shell: bash -l {0}

      - name: Run test_config_generation
        run: |
          /home/runner/miniforge3/envs/seqnado_test run -n seqnado_test pytest "tests/test_pipelines.py::test_config_generation[${{ matrix.test-case }}]" -vv -s --cores 4
        shell: bash -l {0}

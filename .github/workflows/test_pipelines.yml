name: Python package

on:
  push:
  pull_request:

jobs:
  prepare-images:
    runs-on: ubuntu-latest
    env:
      APPTAINER_CACHE: ${{ github.workspace }}/apptainer-cache
    steps:
      - uses: actions/checkout@v3

      - name: Setup Apptainer
        uses: eWaterCycle/setup-apptainer@v2
        with:
          apptainer-version: 1.3.4

      - name: Configure Sylabs remote
        run: |
          apptainer remote add --no-login SylabsCloud cloud.sylabs.io || true
          apptainer remote use SylabsCloud

      - name: Pull all required images
        run: |
          mkdir -p "$APPTAINER_CACHE"
          images=(
            library://asmith151/seqnado/seqnado_pipeline:latest
            library://asmith151/seqnado/seqnado_extra:latest
            library://asmith151/seqnado/seqnado_report:latest
            library://cchahrou/seqnado/seqnado_meth.sif:latest
            library://asmith151/lanceotron/lanceotron-mcc:latest
            library://asmith151/seqnado/seqnado_mcc:latest
          )
          for img in "${images[@]}"; do
            APPTAINER_CACHE="$APPTAINER_CACHE" apptainer pull --force $img
          done

      - name: Upload Apptainer cache
        uses: actions/upload-artifact@v4
        with:
          name: apptainer-cache
          path: ${{ github.workspace }}/apptainer-cache

  Test:
    needs: prepare-images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: ["config", "design", "pipeline"]
        assay: ["atac", "chip-rx", "chip", "rna-rx", "rna", "snp", "cat", "meth", "mcc"]

    env:
      APPTAINER_CACHE: ${{ github.workspace }}/apptainer-cache

    steps:
      - uses: actions/checkout@v3

      - name: Download Apptainer cache
        if: matrix.test == 'pipeline'
        uses: actions/download-artifact@v4
        with:
          name: apptainer-cache
          path: ${{ github.workspace }}/apptainer-cache

      - name: Cache Conda & pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.conda
            ~/.cache/pip
          key: ${{ runner.os }}-conda-${{ hashFiles('**/testing.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-

      - name: Setup Mamba environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: testing.yml
          auto-activate-base: false
          mamba: true

      - name: Install package
        run: pip install .

      - name: Setup Apptainer (for pipeline tests)
        if: matrix.test == 'pipeline'
        uses: eWaterCycle/setup-apptainer@v2
        with:
          apptainer-version: 1.3.4

      - name: Configure Sylabs remote
        if: matrix.test == 'pipeline'
        run: |
          apptainer remote add --no-login SylabsCloud cloud.sylabs.io || true
          apptainer remote use SylabsCloud

      - name: Run pytest
        env:
          TMPDIR: /tmp
          SEQNADO_CONFIG: ${{ github.workspace }}/tests/genome_config.json
        run: |
          pytest tests/test_pipelines.py::test_${{ matrix.test }}[${{ matrix.assay }}] -vv -s --cores 4
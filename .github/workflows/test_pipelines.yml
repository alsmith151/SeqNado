name: Python package

on: [push]

jobs:
  Test:
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [pull_singularity]
    strategy:
      matrix:
        test: ["config", "design", "pipeline"]
        assay: ["atac", "chip-rx", "chip", "rna-rx", "rna", "snp"]

    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache-conda
        uses: actions/cache@v3
        with:
          path: |
            ~/.conda
            ~/.cache/pip
          key: ${{ runner.os }}-env-${{ hashFiles('**/testing.yml') }}
          restore-keys: |
            ${{ runner.os }}-env-

      - name: Set up conda using miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: testing.yml
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true

      - name: Install the package
        shell: pwsh
        run: |
          pip install .

      - name: Download Singularity image seqnado_pipeline
        if: matrix.test == 'pipeline' && matrix.assay != 'rna-rx'
        uses: actions/download-artifact@v3
        with:
          name: singularity-images-seqnado_pipeline
          path: .

      - name: Download Singularity image seqnado_extra
        if: matrix.test == 'pipeline' && matrix.assay != 'rna-rx'
        uses: actions/download-artifact@v3
        with:
          name: singularity-images-seqnado_extra
          path: .

      - name: Download Singularity image seqnado_report
        if: matrix.test == 'pipeline' && matrix.assay == 'rna-rx'
        uses: actions/download-artifact@v3
        with:
          name: singularity-images-seqnado_report
          path: .

      - name: Extract Singularity images
        if: matrix.test == 'pipeline'
        shell: pwsh
        run: |
          mkdir -p /home/runner/singularity-images
          if ${{ matrix.assay != 'rna-rx' }}; then
            tar -xzf singularity-images-seqnado_pipeline.tar.gz -C /home/runner/singularity-images
            tar -xzf singularity-images-seqnado_extra.tar.gz -C /home/runner/singularity-images
          else
            tar -xzf singularity-images-seqnado_pipeline.tar.gz -C /home/runner/singularity-images
            tar -xzf singularity-images-seqnado_extra.tar.gz -C /home/runner/singularity-images
            tar -xzf singularity-images-seqnado_report.tar.gz -C /home/runner/singularity-images
          fi

      - name: Test ${{ matrix.test }} ${{ matrix.assay }}
        shell: pwsh
        run: |
          pytest tests/test_pipelines.py::test_${{ matrix.test }}[${{ matrix.assay }}] -vv -s --cores 4

  pull_singularity:
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: ["seqnado_pipeline", "seqnado_extra", "seqnado_report"]

    steps:
      - uses: actions/checkout@v3
      - uses: eWaterCycle/setup-apptainer@v2
        with:
          apptainer-version: 1.1.2

      - name: Add singularity hub remote
        shell: pwsh
        run: |
          apptainer remote add --no-login SylabsCloud cloud.sylabs.io
          apptainer remote use SylabsCloud

      - name: Pull Singularity images
        shell: pwsh
        run: |
          mkdir -p ./singularity-images
          apptainer pull --force --dir ./singularity-images library://asmith151/seqnado/${{ matrix.container }}:latest

      - name: tar Singularity images
        shell: pwsh
        run: |
          tar -czf singularity-images-${{ matrix.container }}.tar.gz -C ./singularity-images .

      - name: Save Singularity tar files
        uses: actions/upload-artifact@v3
        with:
          name: singularity-images-${{ matrix.container }}
          path: singularity-images-${{ matrix.container }}.tar.gz

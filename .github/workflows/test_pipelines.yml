name: Python package

on: [push]

jobs:
  Test:
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [pull_singularity]
    strategy:
      matrix:
        test: ["config", "design", "pipeline"]
        assay: ["atac", "chip-rx", "chip", "rna-rx", "rna", "snp"]

    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache-conda
        uses: actions/cache@v3
        with:
          path: |
            ~/.conda
            ~/.cache/pip
          key: ${{ runner.os }}-env-${{ hashFiles('**/testing.yml') }}
          restore-keys: |
            ${{ runner.os }}-env-

      - name: Set up conda using miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: testing.yml
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true

      - name: Install the package
        shell: pwsh
        run: |
          pip install .

      - name: access artefact "3948023ce759e51abc90dfc36fd590e5.simg"
        if: ${{ matrix.test == 'pipeline' }}
        uses: actions/download-artifact@v3
        with:
          name: 3948023ce759e51abc90dfc36fd590e5.simg
          path: ./singularity-images

      - name: access artefact "c69acb375a13228d65f9178e44481827.simg"
        if: ${{ matrix.test == 'pipeline' }}
        uses: actions/download-artifact@v3
        with:
          name: c69acb375a13228d65f9178e44481827.simg
          path: ./singularity-images

      - name: access artefact "71c124ddd7f70a6d7226bfca418fcb8e.simg"
        if: ${{ matrix.test == 'pipeline' }}
        uses: actions/download-artifact@v3
        with:
          name: 71c124ddd7f70a6d7226bfca418fcb8e.simg
          path: ./singularity-images

      - name: Test ${{ matrix.test }} ${{ matrix.assay }}
        shell: pwsh
        run: |
          pytest tests/test_pipelines.py::test_${{ matrix.test }}[${{ matrix.assay }}] -vv -s --cores 4

  pull_singularity:
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: ["seqnado_pipeline", "seqnado_extra", "seqnado_report"]
        include:
          - image: "3948023ce759e51abc90dfc36fd590e5.simg"
            container: seqnado_pipeline
          - image: "c69acb375a13228d65f9178e44481827.simg"
            container: seqnado_extra
          - image: "71c124ddd7f70a6d7226bfca418fcb8e.simg"
            container: seqnado_report

    steps:
      - uses: actions/checkout@v3
      - uses: eWaterCycle/setup-apptainer@v2
        with:
          apptainer-version: 1.1.2

      - name: Add singularity hub remote
        run: |
          apptainer remote add --no-login SylabsCloud cloud.sylabs.io
          apptainer remote use SylabsCloud

      - name: Pull Singularity images
        if: not [ -f ./singularity-images/${{ matrix.image }}.tar.gz ]
        run: |
          mkdir -p ./singularity-images
          for i in {1..5}; do
            apptainer pull --force --dir ./singularity-images library://asmith151/seqnado/${{ matrix.container }}:latest
            if [ $? -eq 0 ]; then
              break
            fi
            sleep 10
          done

      - name: print list of files
        shell: pwsh
        run: |
          ls -l ./singularity-images

      - name: Save Singularity images for subsequent jobs
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.image }}
          path: ./singularity-images/${{ matrix.image }}.tar.gz

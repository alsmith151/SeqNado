name: Python package

on: [push, pull_request]

jobs:
  setup:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up conda using miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: testing.yml
          miniforge-version: latest
          miniforge-variant: Mambaforge
          python-version: ${{ matrix.python-version }}
          use-mamba: true

      - name: Install package dependencies
        run: |
          mamba env update -n seqnado_test -f testing.yml
        shell: bash -l {0}

      - name: Verify environment creation
        run: |
          mamba env list
        shell: bash -l {0}

      - name: Install the package
        shell: bash -l {0}
        run: |
          conda run -n seqnado_test pip install .

      - name: Conda list
        shell: bash -l {0}
        run: conda run -n seqnado_test mamba list

      - name: Save environment for subsequent jobs
        run: |
          tar -czf conda-env.tar.gz -C /home/runner/miniconda3/envs/seqnado_test .
      - uses: actions/upload-artifact@v3
        with:
          name: conda-env
          path: conda-env.tar.gz

  pull_singularity:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: ["seqnado_pipeline", "seqnado_extra", "seqnado_report"]

    steps:
      - uses: actions/checkout@v3

      - uses: eWaterCycle/setup-apptainer@v2
        with:
          apptainer-version: 1.1.2

      - name: Add singularity hub remote
        run: |
          apptainer remote add --no-login SylabsCloud cloud.sylabs.io
          apptainer remote use SylabsCloud

      - name: Pull Singularity images with retries
        run: |
          mkdir -p /tmp/singularity-images
          for i in {1..5}; do
            apptainer pull --force --dir /tmp/singularity-images library://asmith151/seqnado/${{ matrix.container }}:latest
            if [ $? -eq 0 ]; then
              break
            fi
            sleep 10
          done

      - name: Save Singularity images for subsequent jobs
        run: |
          tar -czf singularity-images-${{ matrix.container }}.tar.gz -C /tmp/singularity-images .
      - uses: actions/upload-artifact@v3
        with:
          name: singularity-images-${{ matrix.container }}
          path: singularity-images-${{ matrix.container }}.tar.gz

  test_config_generation:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-case: ["atac", "chip-rx", "chip", "rna-rx", "rna", "snp"]
    steps:
      - uses: actions/checkout@v3

      - name: Download environment
        uses: actions/download-artifact@v3
        with:
          name: conda-env
          path: .

      - name: Extract environment
        run: |
          mkdir -p /home/runner/miniconda3/envs/seqnado_test
          tar -xzf conda-env.tar.gz -C /home/runner/miniconda3/envs/seqnado_test

      - name: Run test_config_generation
        shell: bash -l {0}
        run: |
          conda run -n seqnado_test pytest -vv -s --cores 4 -k "tests/test_pipelines.py::test_config_generation[${{ matrix.test-case }}]"

  test_pipeline:
    needs: [setup, pull_singularity]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-case: ["atac", "chip-rx", "chip", "rna-rx", "rna", "snp"]
    steps:
      - uses: actions/checkout@v3

      - name: Download environment
        uses: actions/download-artifact@v3
        with:
          name: conda-env
          path: .

      - name: Extract environment
        run: |
          mkdir -p /home/runner/miniconda3/envs/seqnado_test
          tar -xzf conda-env.tar.gz -C /home/runner/miniconda3/envs/seqnado_test

      - name: Download Singularity images
        uses: actions/download-artifact@v3
        with:
          name: singularity-images-${{ matrix.container }}
          path: .

      - name: Extract Singularity images
        run: |
          mkdir -p /tmp/singularity-images
          tar -xzf singularity-images-${{ matrix.container }}.tar.gz -C /tmp/singularity-images

      - name: Run test_pipeline
        shell: bash -l {0}
        run: |
          conda run -n seqnado_test pytest -vv -s --cores 4 -k "tests/test_pipelines.py::test_pipeline[${{ matrix.test-case }}]"

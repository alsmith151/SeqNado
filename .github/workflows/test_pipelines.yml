name: Python package

on: [push, pull_request]

jobs:
  setup_test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]
        test: ["test_config_generation"]
        test-case: ["atac", "chip-rx", "chip", "rna-rx", "rna", "snp"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache conda environment
        id: cache-conda
        uses: actions/cache@v3
        with:
          path: |
            ~/miniforge3/envs/test
            ~/.cache/pip
          key: ${{ runner.os }}-conda-${{ matrix.python-version }}-${{ hashFiles('**/testing.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ matrix.python-version }}-

      - name: Set up conda using miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: testing.yml
          miniforge-variant: Mambaforge
          miniforge-version: latest
          python-version: ${{ matrix.python-version }}
          use-mamba: true

      - name: Install package
        if: steps.cache-conda.outputs.cache-hit != 'true'
        run: |
          pip install .
        shell: bash -l {0}

      - name: Run tests
        run: |
          pytest "tests/test_pipelines.py::${{ matrix.test }}[${{ matrix.test-case }}]" -vv -s --cores 4 -k
        shell: bash -l {0}
